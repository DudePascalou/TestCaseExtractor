<Window x:Class="TestCaseExtractor.LoadingWindow" Title="LoadingWindow" ResizeMode="CanResize" Height="100" Width="250" AllowsTransparency="False" WindowStyle="None" WindowStartupLocation="CenterOwner" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="clr-namespace:System;assembly=mscorlib">
    <Grid>
        <Grid.Resources>
            <SolidColorBrush x:Key="ParticleColor" Color="#006699" />
            <SolidColorBrush x:Key="ParticleBackgroundColor" Color="Transparent" />
            <d:Double x:Key="ParticleOpacity">1</d:Double>
            <d:Double x:Key="ParticleRadius">5</d:Double>
            <d:Double x:Key="StartingPointX">0</d:Double>
            <d:Double x:Key="StartingPointY">-20</d:Double>
            <d:Double x:Key="RotationPointX">0.5</d:Double>
            <d:Double x:Key="RotationPointY">0.5</d:Double>
            <d:Double x:Key="ParticleOriginAngleP0">0</d:Double>
            <d:Double x:Key="ParticleOriginAngleP1">-10</d:Double>
            <d:Double x:Key="ParticleOriginAngleP2">-20</d:Double>
            <d:Double x:Key="ParticleOriginAngleP3">-30</d:Double>
            <d:Double x:Key="ParticleOriginAngleP4">-40</d:Double>
            <d:Double x:Key="ParticleBeginAngle1">0</d:Double>
            <d:Double x:Key="ParticleEndAngle1">90</d:Double>
            <d:Double x:Key="ParticleBeginAngle2">90</d:Double>
            <d:Double x:Key="ParticleEndAngle2">270</d:Double>
            <d:Double x:Key="ParticleBeginAngle3">270</d:Double>
            <d:Double x:Key="ParticleEndAngle3">360</d:Double>
            <Style x:Key="EllipseStyle" TargetType="{x:Type Ellipse}">
                <Setter Property="FrameworkElement.Width" Value="{StaticResource ParticleRadius}" />
                <Setter Property="FrameworkElement.Height" Value="{StaticResource ParticleRadius}" />
                <Setter Property="Shape.Fill" Value="{StaticResource ParticleColor}" />
                <Setter Property="UIElement.RenderTransformOrigin" Value="0.5, 0.5" />
                <Setter Property="UIElement.Opacity" Value="{StaticResource ParticleOpacity}" />
            </Style>
        </Grid.Resources>
        <Canvas Width="50" Height="50" Margin="150,40,0,0">
            <Canvas.Triggers>
                <EventTrigger RoutedEvent="Canvas.Loaded">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard BeginTime="00:00:00.000" Duration="00:00:01.800" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="p0" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.000" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.750" Value="90" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.050" Value="270" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.800" Value="360" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                        <BeginStoryboard>
                            <Storyboard BeginTime="00:00:00.100" Duration="00:00:01.800" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="p1" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.000" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.750" Value="90" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.050" Value="270" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.800" Value="360" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                        <BeginStoryboard>
                            <Storyboard BeginTime="00:00:00.200" Duration="00:00:01.800" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="p2" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.000" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.750" Value="90" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.050" Value="270" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.800" Value="360" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                        <BeginStoryboard>
                            <Storyboard BeginTime="00:00:00.300" Duration="00:00:01.800" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="p3" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.000" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.750" Value="90" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.050" Value="270" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.800" Value="360" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                        <BeginStoryboard>
                            <Storyboard BeginTime="00:00:00.400" Duration="00:00:01.800" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="p4" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.000" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.750" Value="90" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.050" Value="270" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.800" Value="360" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Canvas.Triggers>
            <Border Name="p0" Background="{StaticResource ParticleBackgroundColor}" Opacity="{StaticResource ParticleOpacity}">
                <Border.RenderTransform>
                    <RotateTransform />
                </Border.RenderTransform>
                <Border.RenderTransformOrigin>
                    <Point X="{StaticResource RotationPointX}" Y="{StaticResource RotationPointY}" />
                </Border.RenderTransformOrigin>
                <Ellipse Style="{StaticResource EllipseStyle}">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="{StaticResource StartingPointX}" Y="{StaticResource StartingPointY}" />
                            <RotateTransform Angle="{StaticResource ParticleOriginAngleP0}" />
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
            </Border>
            <Border Name="p1" Background="{StaticResource ParticleBackgroundColor}" Opacity="{StaticResource ParticleOpacity}">
                <Border.RenderTransform>
                    <RotateTransform />
                </Border.RenderTransform>
                <Border.RenderTransformOrigin>
                    <Point X="{StaticResource RotationPointX}" Y="{StaticResource RotationPointY}" />
                </Border.RenderTransformOrigin>
                <Ellipse Style="{StaticResource EllipseStyle}">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="{StaticResource StartingPointX}" Y="{StaticResource StartingPointY}" />
                            <RotateTransform Angle="{StaticResource ParticleOriginAngleP1}" />
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
            </Border>
            <Border Name="p2" Background="{StaticResource ParticleBackgroundColor}" Opacity="{StaticResource ParticleOpacity}">
                <Border.RenderTransform>
                    <RotateTransform />
                </Border.RenderTransform>
                <Border.RenderTransformOrigin>
                    <Point X="{StaticResource RotationPointX}" Y="{StaticResource RotationPointY}" />
                </Border.RenderTransformOrigin>
                <Ellipse Style="{StaticResource EllipseStyle}">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="{StaticResource StartingPointX}" Y="{StaticResource StartingPointY}" />
                            <RotateTransform Angle="{StaticResource ParticleOriginAngleP2}" />
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
            </Border>
            <Border Name="p3" Background="{StaticResource ParticleBackgroundColor}" Opacity="{StaticResource ParticleOpacity}">
                <Border.RenderTransform>
                    <RotateTransform />
                </Border.RenderTransform>
                <Border.RenderTransformOrigin>
                    <Point X="{StaticResource RotationPointX}" Y="{StaticResource RotationPointY}" />
                </Border.RenderTransformOrigin>
                <Ellipse Style="{StaticResource EllipseStyle}">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="{StaticResource StartingPointX}" Y="{StaticResource StartingPointY}" />
                            <RotateTransform Angle="{StaticResource ParticleOriginAngleP3}" />
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
            </Border>
            <Border Name="p4" Background="{StaticResource ParticleBackgroundColor}" Opacity="{StaticResource ParticleOpacity}">
                <Border.RenderTransform>
                    <RotateTransform />
                </Border.RenderTransform>
                <Border.RenderTransformOrigin>
                    <Point X="{StaticResource RotationPointX}" Y="{StaticResource RotationPointY}" />
                </Border.RenderTransformOrigin>
                <Ellipse Style="{StaticResource EllipseStyle}">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="{StaticResource StartingPointX}" Y="{StaticResource StartingPointY}" />
                            <RotateTransform Angle="{StaticResource ParticleOriginAngleP4}" />
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
            </Border>
        </Canvas>
        <Label Margin="10,15,10,10" FontFamily="Consolas" FontSize="16">Loading...</Label>
        <Label Margin="10,40,10,10" FontFamily="Consolas" FontSize="12">Please wait</Label>
    </Grid>
</Window>
